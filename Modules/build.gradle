plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.demo'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

bootJar.enabled = false
jar.enabled = true

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.hibernate:hibernate-core:5.5.6.Final'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /* querydsl */

    // QueryDSL 라이브러리
    implementation 'com.querydsl:querydsl-core'
    // QueryDSL JPA 라이브러리
    implementation 'com.querydsl:querydsl-jpa'
    // QueryDSL 관련된 쿼리 타입(QClass)을 생성할 때 필요한 라이브러리로, annotationProcessor을 사용하여 추가
    annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
    // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 시 추가
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    // java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 시 추가
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

}

tasks.named('test') {
    useJUnitPlatform()
}
// clean task를 실행 시 QClass를 삭제
clean {
    // QClass가 생성되는 위치
    delete file('src/main/generated')
}
//tasks.register('prepareKotlinBuildScriptModel')